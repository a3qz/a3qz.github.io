{"version":3,"sources":["App.tsx","Reference.ts","Glass.tsx","Targets.tsx","Actions.tsx","Inputs.tsx","reportWebVitals.ts","index.tsx"],"names":["GamePhase","Volumes","Glass","props","styles","root","padding","Stack","this","contents","map","item","idx","StackItem","React","Component","Targets","horizontal","list","_","disabledList","includes","PrimaryButton","onClick","updateParent","console","log","hidden","disabled","selected","Actions","submitAction","reference","Inputs","state","selectedTarget","change","bind","x","setState","targetsList","targetsDisabledList","actionsList","action","actionFunction","App","querystring","window","location","search","hubConnection","signalR","withUrl","configureLogging","Information","build","glassContents","playerCount","actions","roundNumber","cupNumber","phase","Unassigned","results","teamName","cupLocks","resultsList","blockJoin","componentDidMount","renderGame","start","setupHub","connection","on","cup","playercount","round","Started","reset","cupState","result","i","length","j","Math","floor","random","Resulted","concat","TextField","placeholder","onChange","event","newValue","DefaultButton","invoke","text","Assigned","Array","keys","target","Reference","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faffd90e.chunk.js","sourcesContent":["import React, { FormEvent } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Stack, IStackStyles, IStackTokens, IStackItemStyles } from 'office-ui-fabric-react/lib/Stack';\r\nimport Recipe from './Recipe';\r\nimport * as Reference from './Reference';\r\nimport Glass from './Glass';\r\nimport { DefaultButton, PrimaryButton, TextField} from '@fluentui/react';\r\nimport Inputs from './Inputs';\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport * as querystring from \"query-string\";\r\n\r\ntype AppState = {\r\n  hubConnection: signalR.HubConnection,\r\n  glassContents: Array<number>,\r\n  phase: GamePhase,\r\n  playerCount: number,\r\n  actions: Array<number>,\r\n  roundNumber: number,\r\n  cupNumber: number,\r\n  results: Array<number>,\r\n  teamName: string,\r\n  cupLocks: Array<number>,\r\n  resultsList: Array<Array<number>>,\r\n  blockJoin: boolean,\r\n}\r\n\r\ntype AppProps = {\r\n  actionsList: Array<string>,\r\n  targetsList: Array<number>,\r\n  actionFunction: Function\r\n}\r\n\r\nenum GamePhase{\r\n  Unassigned,\r\n  Assigned,\r\n  Started,\r\n  Resulted\r\n}\r\n\r\nexport default class App extends React.Component<any, AppState>\r\n{ \r\n  constructor(props: any) {\r\n    super(props);\r\n    var roomcode = querystring.parse(window.location.search);\r\n    var room = roomcode[\"room\"];\r\n    const hubConnection = new signalR.HubConnectionBuilder()\r\n    .withUrl(`https://schittalkin.azurewebsites.net/whiterushin/`)\r\n    .configureLogging(signalR.LogLevel.Information)\r\n    .build();\r\n\r\n    this.state = {\r\n      hubConnection: hubConnection,\r\n      glassContents: [],\r\n      playerCount: 0,\r\n      actions: [],\r\n      roundNumber: -1,\r\n      cupNumber: -1,\r\n      phase: GamePhase.Unassigned,\r\n      results: [],\r\n      teamName: \"\",\r\n      cupLocks: [],\r\n      resultsList: [],\r\n      blockJoin: false\r\n    }\r\n    this.componentDidMount.bind(this);\r\n    //this.setupHub.bind(this);\r\n    this.renderGame.bind(this);\r\n    console.log(hubConnection);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.state.hubConnection.start();\r\n    this.setupHub(this.state.hubConnection);\r\n  }\r\n\r\n  reset(){\r\n    this.setState({\r\n      glassContents: [],\r\n      results: [],\r\n      cupLocks: []\r\n    });\r\n  }\r\n\r\n  setupHub(connection: signalR.HubConnection){\r\n    connection.on(\"Assign\", (cup: number, actions: number[], playercount: number, round: number) => {\r\n      console.log(`cup: ${cup} actions: ${actions} playercount: ${playercount} round number: ${round}`);\r\n      this.setState({\r\n        playerCount: playercount,\r\n        roundNumber: round,\r\n        cupNumber: cup,\r\n        actions: actions\r\n      });\r\n    });\r\n    connection.on(\"Start\", () => {\r\n      console.log(`started`);\r\n      this.setState({\r\n        phase: GamePhase.Started\r\n      });\r\n      this.reset();\r\n    });\r\n    connection.on(\"UpdateCupState\", (cupState:number[]) => {\r\n      console.log(`CupState: ${cupState}`);\r\n      this.setState({\r\n        glassContents: cupState\r\n      });\r\n    });\r\n    connection.on(\"Result\", (result:number[]) => {\r\n      for (let i = result.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [result[i], result[j]] = [result[j], result[i]];\r\n      }\r\n      var list = [0,0,0,0]\r\n      /*result.forEach(element => {\r\n        list[element] += 1;\r\n      });\r\n      let list2 = this.state.resultsList;\r\n      list2.push(list);*/\r\n      this.setState({\r\n        phase: GamePhase.Resulted,\r\n        results: result,\r\n      })\r\n    });\r\n    connection.on(\"LockCup\", (cup:number) => {\r\n      console.log(`Locked ${cup}`);\r\n      this.setState({\r\n        cupLocks: this.state.cupLocks.concat([cup]),\r\n      })\r\n      console.log(this.state.cupLocks);\r\n    });\r\n  };\r\n\r\n  renderGame(){\r\n    switch(this.state.phase){\r\n      case GamePhase.Unassigned:\r\n        return <div>\r\n          <TextField placeholder=\"Team Name\" onChange={(event: FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue:string|undefined)=>{this.setState({teamName: newValue??\"\"})}}/>\r\n          <DefaultButton onClick={()=>{console.log(this.state.teamName);this.state.hubConnection.invoke(\"Register\", this.state.teamName); this.setState({blockJoin: true})}} text=\"Join Game\" disabled={this.state.blockJoin}/>\r\n          {this.state.blockJoin? \"Waiting for other bartenders\":\"\"}\r\n        </div>\r\n      case GamePhase.Assigned:\r\n        return <div>\r\n          Please wait for the other bartenders to arrive\r\n        </div>\r\n      case GamePhase.Started:\r\n        return <div>\r\n          <label>You are cup # {this.state.cupNumber}</label>\r\n          <Inputs targetsList={ [...Array(this.state.playerCount).keys()]} targetsDisabledList={this.state.cupLocks} actionsList={this.state.actions} actionFunction={(action:number, target:number)=>this.state.hubConnection.invoke(\"SendAction\", action, target)}/>\r\n          <Glass contents={this.state.glassContents.map((item: number)=> Reference.Volumes[item])}/>\r\n          <PrimaryButton text=\"Empty glass\" disabled={this.state.cupLocks.includes(this.state.cupNumber)} onClick={()=>this.state.hubConnection.invoke(\"EmptyCup\")} />\r\n          <DefaultButton text=\"Serve Drink\" disabled={this.state.cupLocks.includes(this.state.cupNumber)} onClick={()=>{\r\n            this.state.hubConnection.invoke(\"SubmitCup\");\r\n          }}/>\r\n        </div> \r\n      case GamePhase.Resulted:\r\n        return <div>\r\n        <h1>Customer comments</h1>\r\n        {this.state.results.map((item)=> \r\n        {\r\n          switch(item){\r\n            case 0:\r\n              <div>\"Just like I ordered! Thanks!\"</div>\r\n              break;\r\n            case 1:\r\n              <div>\"Do I look like someone who would order this?\"</div>\r\n              break;\r\n            case 2:\r\n              <div>\"I didn't even know this was on the menu!\"</div>\r\n              break;\r\n            case 3:\r\n              <div>\"*spits out drink* Do you even know how to make drinks?\"</div>\r\n              break;\r\n          }\r\n        }\r\n        )}\r\n        <h2>Number of correctly made drinks that no one wanted [X]: {this.state.results[2]}</h2>\r\n        <h2>Number of correctly made drinks in the wrong cup [*]: {this.state.results[1]}</h2>\r\n        <h2>Number of correctly made drinks in the right cup [!]: {this.state.results[0]}</h2>\r\n        <h2>Number of things that didn't resemble a drink [?]: {this.state.results[3]}</h2>\r\n        <br />\r\n        <PrimaryButton text=\"Reset\" onClick={()=>{console.log(this.state.hubConnection);this.state.hubConnection.invoke(\"Reset\"); }} />\r\n        </div>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <title>White Rushin</title>\r\n          {this.renderGame()}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const Ingredients = [\r\n    \"Tequila\", \r\n    \"Brandy\", \r\n    \"Gin\", \r\n    \"Rum\", \r\n    \"Vodka\", \r\n    \"Whisky\", \r\n    \"Triple Sec\", \r\n    \"Vermouth\", \r\n    \"Angostura Bitters\", \r\n    \"Coke\", \r\n    \"Soda\", \r\n    \"Tonic\", \r\n    \"Simple Syrup\",\r\n    \"Ice Cube\", \r\n    \"Crushed Ice\",  \r\n    \"Lemon Juice\", \r\n    \"Lime Juice\", \r\n    \"Orange Juice\", \r\n    \"Lime Wedge\", \r\n    \"Lemon Wedge\", \r\n    \"Orange Wedge\", \r\n    \"Shake Drink\", \r\n    \"Stir Drink\",\r\n    \"Strain Drink\",\r\n    \"Muddle Drink\",\r\n    \"Cognac\"\r\n];\r\n\r\nexport const Volumes = [\r\n    \"Angostura Bitters\",\r\n    \"Coke\",\r\n    \"Egg White\",\r\n    \"Gin\",\r\n    \"Ice Cube\",\r\n    \"Lemon Juice\",\r\n    \"Lime Wedge \",\r\n    \"Mint\",\r\n    \"Orange Juice\",\r\n    \"Shake Drink\",\r\n    \"Simple Syrup\",\r\n    \"Stir Drink\",\r\n    \"Tequila\",\r\n    \"Triple Sec\",\r\n    \"Vermouth\",\r\n    \"Whiskey\",\r\n];","import React from 'react';\r\nimport { IStackItemStyles, PrimaryButton, Stack, StackItem } from '@fluentui/react';\r\n\r\ntype GlassProps = {\r\n    contents: Array<string>,\r\n}\r\ntype GlassState = {\r\n}\r\nexport default class Glass extends React.Component<GlassProps, GlassState>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    styles: IStackItemStyles = {\r\n        root: {\r\n            padding: 5,\r\n          },\r\n      };\r\n    render() {\r\n        return <Stack >\r\n            Glass Contents:\r\n            {this.props.contents.map((item, idx) =>\r\n                <StackItem styles={this.styles} key={idx}>\r\n                    {item}\r\n                </StackItem>)}\r\n        </Stack>\r\n    }\r\n}","import { IStackItemStyles, PrimaryButton, Stack, StackItem } from '@fluentui/react';\r\nimport React from 'react';\r\n\r\ntype TargetsState = {\r\n    count: number, \r\n    list: Array<number>,\r\n\r\n}\r\ntype TargetsProps = {\r\n    list: Array<number>, \r\n    updateParent: Function,\r\n    disabledList: Array<number>,\r\n    selected: number\r\n}\r\n\r\nexport default class Targets extends React.Component<TargetsProps, TargetsState>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n      }\r\n\r\n      styles: IStackItemStyles = {\r\n        root: {\r\n            padding: 5,\r\n          },\r\n      };\r\n    render(){\r\n        return <div>\r\n            <Stack horizontal>\r\n                {this.props.list.map((_, idx) =>\r\n                !this.props.disabledList.includes(idx) ? \r\n                <StackItem styles={this.styles} key={idx}>\r\n                    <PrimaryButton onClick={()=>{this.props.updateParent(idx); console.log(this.props.disabledList, idx)}} hidden={this.props.disabledList.includes(idx)} disabled={this.props.selected == idx }>{idx}</PrimaryButton>\r\n                </StackItem>\r\n                : \r\n                \"\")}\r\n            </Stack>\r\n            </div>\r\n    }\r\n}","import { IStackItemStyles, PrimaryButton, Stack, StackItem } from '@fluentui/react';\r\nimport React from 'react';\r\nimport * as reference from './Reference'\r\n\r\ntype ActionsProps = {\r\n    list: Array<number>,\r\n    submitAction: Function\r\n}\r\ntype ActionsState = {\r\n}\r\n\r\nexport default class Actions extends React.Component<ActionsProps, ActionsState>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n      }\r\n\r\n      styles: IStackItemStyles = {\r\n        root: {\r\n            padding: 5,\r\n          },\r\n      };\r\n\r\n    render(){\r\n    return <div>\r\n        <Stack>\r\n        {this.props.list.map((item, idx)=> <StackItem styles={this.styles} key={idx}>\r\n            <PrimaryButton onClick={()=>{this.props.submitAction(item)}}>{reference.Volumes[item]}</PrimaryButton>\r\n        </StackItem>)}\r\n            </Stack></div>\r\n    }\r\n}","import React from 'react';\r\nimport Targets from './Targets';\r\nimport Actions from './Actions';\r\n\r\ntype InputsState = {\r\n    selectedTarget: number,\r\n}\r\n\r\ntype InputsProps = {\r\n    actionsList: Array<number>,\r\n    targetsList: Array<number>,\r\n    targetsDisabledList: Array<number>,\r\n    actionFunction: Function\r\n}\r\n\r\nexport default class Inputs extends React.Component<InputsProps, InputsState>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTarget: 0,\r\n        }\r\n        this.change = this.change.bind(this);\r\n    }\r\n\r\n    change(x:number){\r\n        this.setState({selectedTarget: x})\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            <label>Target Cups:</label>\r\n            <Targets list={this.props.targetsList} disabledList={this.props.targetsDisabledList} updateParent={(x:number)=>this.change(x)} selected={this.state.selectedTarget}/>\r\n            <label>Actions:</label>\r\n            <Actions list={this.props.actionsList} submitAction={(action:number)=>this.props.actionFunction(action, (this.props.targetsDisabledList.includes(this.state.selectedTarget))? -1 : this.state.selectedTarget)}/>\r\n        </div>\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}